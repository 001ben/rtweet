% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot.R
\name{ts_plot}
\alias{ts_plot}
\title{Plots tweets data as a time series-like data object.}
\usage{
ts_plot(data, by = "days", trim = 0L, ...)
}
\arguments{
\item{data}{Data frame or grouped data frame.}

\item{by}{Desired interval of time expressed as numeral plus secs,
mins, hours, days, weeks, months, years. If a numeric is
provided, the value is assumed to be in seconds.}

\item{trim}{The number of observatons to drop off the beginning and
end of the time series.}

\item{...}{Other args passed to ggplot geom_line or, if ggplot2 is
not installed, then to lines plotting function.}
}
\value{
If ggplot2 is installed then a ggplot2 plot
}
\description{
Plots tweets data as a time series-like data object.
}
\examples{
\dontrun{
## search for tweets containing "rstats"
rt <- search_tweets("rstats", n = 10000)

## plot frequency in 1 min intervals
ts_plot(rt, "mins")

## plot multiple time series--retweets vs non-retweets
rt \%>\%
  dplyr::group_by(is_retweet) \%>\%
  ts_plot("hours")

## compare account activity for some important US political figures
tmls <- get_timeline(
  c("SenSchumer", "SenGillibrand", "realDonaldTrump"),
  n = 3000
)

## examine all twitter activity using weekly intervals
ts_plot(tmls, "weeks")

## group by screen name and plot each time series
ts_plot(dplyr::group_by(tmls, screen_name), "weeks")

## group by screen name and is_retweet
ts_plot(dplyr::group_by(tmls, screen_name, is_retweet), "months")
}
}
