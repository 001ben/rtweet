% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot.R
\name{ts_plot}
\alias{ts_plot}
\title{ts_plot}
\usage{
ts_plot(rt, by = "days", dtname = "created_at", txt = "text",
  filter = NULL, key = NULL, lwd = 1.5, cols = NULL, theme = "light",
  main = NULL, xlab = "Time", ylab = "Number of Tweets", box = TRUE,
  axes = TRUE, legend.title = NULL, ticks = 0, cex = 0.9,
  cex.main = 1.25, cex.sub = 0.9, cex.lab = 0.9, cex.axis = 0.7,
  mai = c(0.515, 0.575, 0.15, 0.3), plot = TRUE, ...)
}
\arguments{
\item{rt}{Tweets or users data frame}

\item{by}{Unit of time, e.g., \code{secs, days, weeks,
months, years}}

\item{dtname}{Name of date-time (POSIXt) object. Defaults
to created_at.}

\item{txt}{Name of text (chr) variable in data frame which
filter is applied to. Defaults to text.}

\item{filter}{Vector of regular expressions with which to
filter data (creating multiple time series).}

\item{key}{Optional provide pretty labels for filters.
Defaults to actual filters.}

\item{lwd}{Width of time series line(s). Defaults to 1.5}

\item{cols}{Colors for filters. Leave NULl for default color
scheme.}

\item{theme}{Character string specifyng whether and which
plot theme should be used; options include "lighter",
"darker", and "nerdy"}

\item{main}{Optional, text for plot title.}

\item{xlab}{Optional, text for x-axis title, defaults to
"Time".}

\item{ylab}{Optional, text for y-axis title, defaults to
"Number of Tweets"}

\item{box}{Logical indicating whether to draw box around
plot area. Defaults to true.}

\item{axes}{Logical indicating whether to draw axes. Defaults
to true.}

\item{legend.title}{Provide title for legend ro ignore to
leave blank (default)}

\item{ticks}{Numeric specifying width of tick marks. Defaults
to zero. If you'd like tick marks, try setting this value
to 1.25.}

\item{cex}{Global cex setting defaults to .90}

\item{cex.main}{Size of plot title (if plot title provided
via \code{main = "title"} argument).}

\item{cex.sub}{Size of subtitles}

\item{cex.lab}{Size of axis labels and legend text}

\item{cex.axis}{Size of other axis text.}

\item{mai}{Margins in inches.}

\item{plot}{Logical indicating whether to draw plot.}

\item{\dots}{Arguments passed to plot (and par) function}
}
\description{
Plots frequency of tweets as time series or, if multiple
  filters (text-based criteria used to subset data) are
  specified, multiple time series.
}
\examples{
\dontrun{
## stream tweets mentioning trump for 30 mins
rt <- rtweet::stream_tweets(
    q = "realdonaldtrump",
    timeout = (60 * 60 * 30))

## plot tweet data aggregated by minute (default)
ts_plot(rt, by = "mins")

## use a different time increment, line width, and theme
ts_plot(rt, by = "30 secs", lwd = .75, theme = "inverse")

## filter data using regular expressions and
## plot each corresponding time series
ts_plot(rt, by = "mins",
        theme = "gray",
        main = "Partisanship in tweets about Trump",
        filter = c("democrat|liberal|libs",
                   "republican|conservativ|gop"),
        key = c("Democrats", "Republicans"))

## ts_plot also silently returns data frame
rt.ts <- ts_plot(rt, by = "mins")

## printing should yield around 30 rows (give or take)
## since stream was 30 mins and aggregated by minute
rt.ts

## the returned data frame is tidy with three columns
## Column 1 - time Date-time obj of [median] time intervals
## Column 2 - freq Integer (class double) frequency counts
## Column 3 - filter Keys of different time series filters
rt.ts <- ts_plot(rt, by = "mins",
                 filter = c("democrat|liberal|libs",
                            "republican|conservativ|gop"),
                 key = c("Democrats", "Republicans"))

## this makes it easy to pass the data along to ggplot
## but if anyone asks you, you prefer the awesome rtweet
## plot themes over the ggplot2 themes!
library(ggplot2)
rt.ts \%>\%
    ggplot(aes(x = time, y = freq, color = filter)) +
    geom_line()
}
}

